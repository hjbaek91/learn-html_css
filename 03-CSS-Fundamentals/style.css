/* -----CSS Theory #2: Inheritance and the Universal Selector */
/* inherited values does not change their values from their parent elements if they already have the same declaration */

/* selects every single element on the webpage (has lowest priority) */
/* useful for applying certain properties for all elements without getting inherited */
/* * {
  border-top: 10px solid #1098ad;
} */

/* the body selector passes down all the declared properties (usually for 'text' elements) */
body {
  color: #444;
  font-family: sans-serif;
  border-top: 10px solid #1098ad;
}

/* we can apply a CSS effect to various elements at the same time */

h1,
h2,
h3 {
  color: #1098ad;
}

h1 {
  font-size: 26px;
  text-transform: uppercase;
  font-style: italic;
}

h2 {
  font-size: 40px;
}

h3 {
  font-size: 30px;
}

h4 {
  font-size: 20px;
  text-transform: uppercase;
  text-align: center;
}

p {
  font-size: 22px;
  line-height: 1.5;
}

li {
  font-family: sans-serif;
}

/* 'p' element is the child element of the 'footer' element */
/* footer p {
  font-size: 16px;
} */

/* using 'class' and 'id' as selectors makes it easier to apply CSS on specific elements */
/* we mostly use 'class' in case there needs to be changes made in the future */
#author {
  font-style: italic;
  font-size: 18px;
}

#copyright {
  font-size: 16px;
}

.related-author {
  font-size: 18px;
  font-weight: bold;
}

.related {
  list-style: none;
}

.main-header {
  background-color: #f7f7f7;
}

aside {
  background-color: #f7f7f7;
  border-top: 5px solid #1098ad;
  border-bottom: 5px solid #1098ad;
}

/* using a 'pseudo-class' quickly selects elements as selectors */
/* 'li:first-child' selects each of the first 'li' child elements existing in HTML */
li:first-child {
  font-weight: bold;
}

/* 'li:last-child' selects each of the last 'li' child elements existing in HTML */
li:last-child {
  font-style: italic;
}

/* 'li:nth-child' specifically selects child elements manually (ex. number, odd, even) */
/* li:nth-child(2) {
  color: red;
} */

/* 'pseudo-classes' will not work well on descendant selectors because they do not categorize these classes by their specific elements */
article p:first-child {
  color: red;
}

/* Styling links (LVHA) */
/* targets all elements with 'href' attributes */
a:link {
  color: #1098ad;
  /* getting rid of underlines on links */
  text-decoration: none;
}

/* phase where links were clicked previously */
a:visited {
  color: #1098ad;
}

/* phase when the cursor is pointed on the link */
a:hover {
  color: orangered;
  font-weight: bold;
  text-decoration: underline orangered;
}

/* phase when the link is actually clicked */
a:active {
  background-color: black;
  font-style: italic;
}

/* NOTE: using chrome devtools can display how CSS effects are shown on the browser */

/* -----CSS Theory #1: Conflict Between Selectors----- */
/* If there are multiple selectors with the same CSS property, follow the higest-to-lowest 'priority' rule */
/* id <- class <- element <- universal(*) */

/* highest priority */
/* #copyright {
  color: red;
}

.copyright {
  color: blue;
}

.text {
  color: yellow;
}

footer p {
  color: green;
} */

nav {
  font-size: 18px;
}

/* -----CSS Theory #3: The CSS Box Model----- */

/* Defines how elements are displayed on the webpage and how they are sized */

/* CONTENT: Text, images, etc. */
/* BORDER: A line around the element, still 'inside' of the element */
/* PADDING: Invisible space around the content, 'inside' of the element */
/* MARGIN: Space 'outside' of the element, between elements */
/* Fill Area: Area that gets filled with 'background color' or 'background image' */
